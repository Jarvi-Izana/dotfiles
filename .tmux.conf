# recap C-b to C-a
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# tmux version specific {
# if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]; then true; else false; fi" \
set -g mouse on
# }

# use version > 2.1
set -g mouse on

# vim-tmux-navigator {
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l
# }

# set the default terminal 
set -g default-terminal "xterm-256color"

# bind-keys {
# Resolve conflict by prefixing
# C-l to clear screen; EMACS
bind C-l send-key 'C-l'
# C-k to kill the rest of line, EMACS
bind C-k send-key 'C-k'
# }

# panes {
# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %
# }

# windows {
# zero is too far to reach easily. Start numbering windows from 1
set -g base-index 1
bind-key c command-prompt -p "window name:" "new-window; rename-window '%%'"
# }

# wrap tmux-buffer with mac
# Setup 'v' to begin selection as in Vim
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection

# OS specification {
# if check os type
if-shell "uname | grep -q Darwin" \
'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; unbind -T copy-mode-vi Enter; bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
# }

# tmp settings {
# https://github.com/tmux-plugins/tpm
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'


# custom plugins
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf) 
run '~/.tmux/plugins/tpm/tpm'
# }
